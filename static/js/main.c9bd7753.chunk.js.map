{"version":3,"sources":["Components/Navbar.js","Components/Header.js","Components/InfomationDeck.js","Components/MenuItems.js","Components/MenuSections.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Header","src","process","alt","React","Component","InformationDeck","title","width","height","frameBorder","aria-hidden","icon","faFacebook","faTwitter","faMobileAlt","faEnvelopeOpenText","faInstagramSquare","axios","require","MenuItems","state","menuItems","Math","floor","random","get","this","item","selections","then","response","data","menu_items","catch","error","console","log","finally","results","setState","window","localStorage","name","JSON","parse","getItem","newMenu","setItem","stringify","map","food","idx","key","description","setPrice","MenuSections","sections","Fragment","index","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c9bd7753.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.css';\n\n\nfunction Navbar(props){\n   \n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\" id=\"navbarNav\">\n  <a className=\"navbar-brand\" href=\"#navbar\" id=\"navbarNav\">Since 1985</a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n  <div className=\"collapse navbar-collapse\" >\n    <ul className=\"navbar-nav\">\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#home\" id=\"navbarNav\">Home</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#menu\" id=\"navbarNav\">Menu</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#location\" id=\"navbarNav\">Location</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"#contact\" id=\"navbarNav\">Contact Us</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n            </div>\n        )\n    }\n\n\n\nexport default Navbar;","\nimport React from 'react';\nimport './Header.css';\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n\n            <div className=\"container\">\n\n                <img src={process.env.PUBLIC_URL + '/Images/RogersDiner.png'} className=\"logo mt-3\" alt=\"logo\" />\n\n                <h1 className=\"slogan pb-3\">\n                    When you're here, you're home.\n                </h1>\n            </div>\n\n        );\n    }\n}\n\nexport default Header;\n\n","\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEnvelopeOpenText, faMobileAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faFacebook, faTwitter, faInstagramSquare } from \"@fortawesome/free-brands-svg-icons\";\n\n\nclass InformationDeck extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n\n            <div className=\"card-group \" id=\"location\">\n                <div className=\"card \">\n\n                    <img src={process.env.PUBLIC_URL + '/Images/rogers1.jpg'} className=\"card-img-top\" alt=\"...\" />\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title textColor \">Location</h5>\n                        <hr></hr>\n                        <p> 348 E. Main Street <br></br> Lexington, KY 40507 \n                        </p>\n                        <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3142.211413038313!2d-84.49472698527144!3d38.04215997971164!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x884244e844532c33%3A0xb6919957af36b713!2s348%20E%20Main%20St%2C%20Lexington%2C%20KY%2040507!5e0!3m2!1sen!2sus!4v1585602046704!5m2!1sen!2sus\" title=\"Maps\" width=\"300\" height=\"300\" frameBorder=\"0\" className=\"sjustify-content-center\" aria-hidden=\"false\" ></iframe>\n                    </div>\n                </div>\n\n                <div className=\"card\">\n\n                    <img src={process.env.PUBLIC_URL + '/Images/hours.png'} className=\"card-img-top\" alt=\"...\" />\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title textColor\">Hours</h5>\n                        <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td>Sunday</td>\n                                    <td>10a-10p</td>\n                                </tr>\n\n                                <tr>\n                                    <td>Monday</td>\n                                    <td>12p-10p</td>\n                                </tr>\n\n                                <tr>\n                                    <td>Tuesday</td>\n                                    <td>12p-10p</td>\n                                </tr>\n\n                                <tr>\n                                    <td>Wednesday</td>\n                                    <td>12p-10p</td>\n                                </tr>\n\n                                <tr>\n                                    <td>Thursday</td>\n                                    <td>12p-10p</td>\n                                </tr>\n\n                                <tr>\n                                    <td>Friday</td>\n                                    <td>12p-10p</td>\n\n                                </tr>\n                                <tr>\n                                    <td>Saturday</td>\n                                    <td>10a-12p</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n\n                <div className=\"card\" >\n\n                    <img src={process.env.PUBLIC_URL + '/Images/contactus.jpg'} className=\"card-img-top\" alt=\"...\" />\n                    <div className=\"card-body\" id=\"contact\">\n                        <h5 className=\"card-title textColor\">Contact Info</h5>\n                        <hr></hr>\n                        <h4 className=\"row justify-content-start pb-4\"><FontAwesomeIcon icon={faFacebook} /><span className=\"ml-3\">  Facebook.com/RogersDiner</span></h4>\n                        <h4 className=\"row justify-content-start pb-4\"><FontAwesomeIcon icon={faTwitter} /><span className=\"ml-3\"> @RogersDiner</span></h4>\n                        <h4 className=\"row justify-content-start pb-4\"><FontAwesomeIcon icon={faMobileAlt} /> <span className=\"ml-3\"> 859-300-6000</span></h4>\n                        <h4 className=\"row justify-content-start pb-4\"><FontAwesomeIcon icon={faEnvelopeOpenText} /> <span className=\"ml-3\"> info@RogersDiner.com</span></h4>\n                        <h4 className=\"row justify-content-start pb-5\"><FontAwesomeIcon icon={faInstagramSquare} /><span className=\"ml-3\"> @RogersDiner</span></h4>\n                    </div>\n\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nexport default InformationDeck;\n\n","import React from 'react';\nconst axios = require('axios');\n\nclass MenuItems extends React.Component {\n  constructor(props) {\n    super(props);\n\n    //Stored in State= menu items\n    this.state = {\n      menuItems: []//api object items\n\n    }\n  }\n  //create a function that sets price for each item  by randomizing number.\n  setPrice() {\n    return '$' + Math.floor(Math.random() * Math.floor (10) + 15);\n   } \n/*The promise*/ async newMenu() {\n\n    let results = await axios.get('https://entree-f18.herokuapp.com/v1/menu/' + this.props.item.selections)\n      .then(function (response) {\n\n        return response.data.menu_items; // handle success\n\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function () {\n        // always executed\n      });\n\n   /*The promise settled */ await this.setState({\n      menuItems: results,\n    });\n  }\n\n  //set local storage\n  // if localStorage key is present, JSON.parse the key into a string, \n // set state of menuItems array to equal the parsed data from local storage.\n //else, if the local storage is not set, return send the newMenu data to Local Storage\n  async componentDidMount() {\n    if (window.localStorage[this.props.item.name] != null) {\n      let results = JSON.parse(window.localStorage.getItem(this.props.item.name)) || [];\n      this.setState(\n        { menuItems: results } //setting state of menuItems to the result of the json parse \n      );\n    } else {\n      this.newMenu();\n\n    }\n\n  }\n//when component updates, stringify the menuItems\n  componentDidUpdate() {\n    window.localStorage.setItem(this.props.item.name, JSON.stringify(this.state.menuItems))\n\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"card\" >\n        <div className=\"card-header textColor\" id=\"sectionTitle\">\n          <h3>{this.props.item.name}</h3>\n        </div>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            {\n              this.state.menuItems ? this.state.menuItems.map((food, idx) => {\n                return <div className=\"table border-bottom font-weight-bold mx-auto\" key={idx}>{food.description} - {this.setPrice()} </div>\n              }) : null\n            }\n\n          </li>\n        </ul>\n      </div>\n    )\n  }\n\n}\n\n\nexport default MenuItems;","import React from 'react';\nimport MenuItems from './MenuItems.js'\n\nclass MenuSections extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n    }\n    this.sections = [ ///create sections array that stores object date property/value\n      {\n        name: \"Appetizers\",\n        selections: 8,\n       \n      },\n      {\n        name: \"Lunch\",\n        selections: 10,\n      \n      },\n      {\n        name: \"Dinner\",\n        selections: 15,\n    \n      },\n      {\n        name: \"Sides\",\n        selections: 8,\n       \n      },\n      {\n        name: \"Deserts\",\n        selections: 10,\n       \n      }\n    ]\n\n\n  }\n\n\n  /* I want map over the sections to place the section title  {this.sections.name} in the div class \n  \"card-header\" and map over the menuItems from MenuItems.js {new items} ? {this.sections.selections } \n  and price {this.state.sections.price} to place them each inside of a \"list-group-item\n  not sure how to get section selections in play.\"*/\n  render() {\n    \n    return (\n      <React.Fragment>\n      {this.sections.map((item, index) => {\n        return <MenuItems item={item} key={index}/>\n        console.log({index})\n      })}</React.Fragment>\n     \n    );\n  }\n}\n\n\n\n\n\nexport default MenuSections;","import React from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar.js';\nimport Header from './Components/Header.js';\nimport InformationDeck from './Components/InfomationDeck.js';\nimport MenuSections from './Components/MenuSections.js';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Header />\n      <MenuSections />\n      <InformationDeck />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport $ from 'jquery';\n//import \"../node_modules/bootstrap/dist/js/bootstrap.min.js\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}